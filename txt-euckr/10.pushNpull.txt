리모트 저장소와 통신하기
===
리모트 저장소에 내 작업내용을 반영할 수도 있고, 작업 내용을 내려받을 수도 있다.
업로드를 push라고 하며, 다운로드를 pull 이라고 한다.
리모트로 내려받은 브랜치는 리모트이름/브랜치이름 의 형식으로 지칭할 수 있다.
origin/master는 origin리모트의 master브랜치를 의미한다.
fetch
---
    git fetch [<remote_name>]
fetch는 리모트에서 로컬로 내려받는 과정이다. 리모트에는 있지만 로컬에는 없는 데이터를 모두 내려받는다.

연결된 리모트가 하나밖에 없다면 remote_name을 생략할 수도 있다.

fetch는 저장소에 데이터를 내려받지만, 워킹트리에는 영향이 없다. 워킹트리를 갱신하고 싶다면, 병합을 하거나, 해당 브랜치로 체크아웃하면 된다.
fetch후 병합하기
---
    git fetch
    git merge <remote_name>/<remote_branch_name>
일반적으로는
    git merge origin/master
명령을 사용하게 될 것이다. 이는 origin 리모트의 master 브랜치를 현재 로컬에서 바라보고 있는 워킹트리 브랜치와 병합한다는 뜻이다.
pull
---
    git pull [<remote_name>]
remote가 하나 뿐이라면 이름을 생략할 수 있다.
pull은 fetch와 병합을 한 번에 하는 기능이다.
편한 기능인 것은 맞지만, 잘못된 병합을 방지하려면 그냥 fetch와 merge를 나누는 것이 더 낫다. fetch는 남발해도 문제가 없지만, pull은 하기 전에 신중해야한다.
리모트브랜치를 checkout하기
---
    git checkout -b <new_barnch_name> <remote_name>/<remote_branch_name>
현재 로컬 작업상황은 그대로 두고, 리모트 브랜치의 작업을 그대로 체크아웃해서 새로운 브랜치를 만드는 작업이다. 로컬의 작업상황을 병합하기 전에 리모트 브랜치를 좀 더 살펴보고 싶을 때 활용하면 된다. 체크아웃 하기 전에 stash도 잊지 말자.
push
---
    git push [<remote_name>] [<branch_name>]
로컬 저장소를 원격저장소에 업로드(푸시)한다. branch_name을 생략하면 현재 브랜치를 의미하며, remote가 하나 뿐이라면 remote_name도 생략가능하다.
    git push origin master
가 일반적이며
    git push
도 자주 사용할 것이다.
push 주의사항
---
원격저장소는 여럿이 공유하는 특성상, 내가 푸시하는 시점에 원격저장소가 최신상태여야 한다는 규칙이 있다. 내가 푸시하기 직전에 다른 누군가가 먼저 푸시하여 원격저장소의 내용이 달라졌다면, 푸시하기 전에 먼저 fetch -> merge를 한 후에 푸시해야한다.
